@startuml Class Diagram - Hospital Management System

!theme plain
skinparam classAttributeIconSize 0
skinparam classFontSize 12
skinparam classFontName Arial
skinparam backgroundColor #FEFEFE

title Hospital Management System - Class Diagram

' Enums
enum GrupoSanguineo {
    A_POS
    A_NEG
    B_POS
    B_NEG
    AB_POS
    AB_NEG
    O_POS
    O_NEG
}

enum Especialidad {
    CARDIOLOGIA
    PEDIATRIA
    DERMATOLOGIA
    NEUROLOGIA
    CLINICA_GENERAL
}

enum Cargo {
    MEDICO
    ENFERMERO
    ADMINISTRATIVO
    RECEPCIONISTA
}

enum Area {
    URGENCIAS
    CONSULTORIOS
    QUIROFANO
    LABORATORIO
}

enum Turno {
    MAÃ‘ANA
    TARDE
    NOCHE
}

enum Alergia {
    PENICILINA
    ASPIRINA
    LACTOSA
    GLUTEN
}

' Abstract base class
abstract class Persona {
    # Long id
    # int dni
    # String nombre
    # String apellido
    # String fechaNacimiento
    # String direccion
    # String telefono
    # String email
    # Boolean activo
    --
    + Persona()
    + Persona(nombre: String, dni: int)
    + {abstract} mostrarInformacion(): void
    + getId(): Long
    + setId(id: Long): void
    + getNombre(): String
    + setNombre(nombre: String): void
    + getDni(): int
    + setDni(dni: int): void
    + getApellido(): String
    + setApellido(apellido: String): void
    + getFechaNacimiento(): String
    + setFechaNacimiento(fecha: String): void
    + getDireccion(): String
    + setDireccion(direccion: String): void
    + getTelefono(): String
    + setTelefono(telefono: String): void
    + getEmail(): String
    + setEmail(email: String): void
    + isActivo(): Boolean
    + setActivo(activo: Boolean): void
}

' Concrete classes
class Paciente {
    - GrupoSanguineo grupoSanguineo
    - String alergias
    - String historialMedico
    - HistorialMedico historialMedicoObj
    --
    + Paciente()
    + Paciente(nombre: String, dni: int)
    + mostrarInformacion(): void
    + getGrupoSanguineo(): GrupoSanguineo
    + setGrupoSanguineo(grupo: GrupoSanguineo): void
    + getAlergias(): String
    + setAlergias(alergias: String): void
    + getHistorialMedico(): String
    + setHistorialMedico(historial: String): void
    + getHistorialMedicoObj(): HistorialMedico
    + setHistorialMedicoObj(historial: HistorialMedico): void
}

class Empleado {
    - double salario
    - Cargo cargo
    - String fechaContratacion
    --
    + Empleado()
    + Empleado(nombre: String, apellido: String, dni: int, salario: double, cargo: Cargo, fechaContratacion: String)
    + mostrarInformacion(): void
    + getSalario(): double
    + setSalario(salario: double): void
    + getCargo(): Cargo
    + setCargo(cargo: Cargo): void
    + getFechaContratacion(): String
    + setFechaContratacion(fecha: String): void
}

class Medico {
    - Especialidad especialidad
    - String numMatricula
    - Map<String, String> horarioAtencion
    --
    + Medico()
    + Medico(nombre: String, apellido: String, dni: int, salario: double, cargo: Cargo, fechaContratacion: String, especialidad: Especialidad, numMatricula: String, horarioAtencion: Map<String, String>)
    + getEspecialidad(): Especialidad
    + setEspecialidad(especialidad: Especialidad): void
    + getNumMatricula(): String
    + setNumMatricula(numMatricula: String): void
    + getHorarioAtencion(): Map<String, String>
    + setHorarioAtencion(horario: Map<String, String>): void
}

class Enfermero {
    - Area area
    - Turno turno
    --
    + Enfermero()
    + Enfermero(nombre: String, apellido: String, dni: int, salario: double, cargo: Cargo, fechaContratacion: String, area: Area, turno: Turno)
    + getArea(): Area
    + setArea(area: Area): void
    + getTurno(): Turno
    + setTurno(turno: Turno): void
}

class Administrativo {
    - String departamento
    --
    + Administrativo()
    + Administrativo(nombre: String, apellido: String, dni: int, salario: double, cargo: Cargo, fechaContratacion: String, departamento: String)
    + getDepartamento(): String
    + setDepartamento(departamento: String): void
}

class Consulta {
    - Long idConsulta
    - LocalDate fechaConsulta
    - LocalTime horaConsulta
    - String motivo
    - String diagnostico
    - String tratamientoIndicado
    - Medico medico
    - Paciente paciente
    - HistorialMedico historialMedico
    --
    + Consulta()
    + Consulta(fechaConsulta: LocalDate, horaConsulta: LocalTime, motivo: String, medico: Medico, paciente: Paciente)
    + getIdConsulta(): Long
    + setIdConsulta(id: Long): void
    + getFechaConsulta(): LocalDate
    + setFechaConsulta(fecha: LocalDate): void
    + getHoraConsulta(): LocalTime
    + setHoraConsulta(hora: LocalTime): void
    + getMotivo(): String
    + setMotivo(motivo: String): void
    + getDiagnostico(): String
    + setDiagnostico(diagnostico: String): void
    + getTratamientoIndicado(): String
    + setTratamientoIndicado(tratamiento: String): void
    + getMedico(): Medico
    + setMedico(medico: Medico): void
    + getPaciente(): Paciente
    + setPaciente(paciente: Paciente): void
    + getHistorialMedico(): HistorialMedico
    + setHistorialMedico(historial: HistorialMedico): void
}

class HistorialMedico {
    - Long idHistorial
    - Paciente paciente
    - List<String> diagnosticos
    - List<String> tratamientos
    - List<Consulta> consultas
    --
    + HistorialMedico()
    + HistorialMedico(paciente: Paciente)
    + agregarDiagnostico(diagnostico: String): void
    + agregarTratamiento(tratamiento: String): void
    + agregarConsulta(consulta: Consulta): void
    + getIdHistorial(): Long
    + setIdHistorial(id: Long): void
    + getPaciente(): Paciente
    + setPaciente(paciente: Paciente): void
    + getDiagnosticos(): List<String>
    + setDiagnosticos(diagnosticos: List<String>): void
    + getTratamientos(): List<String>
    + setTratamientos(tratamientos: List<String>): void
    + getConsultas(): List<Consulta>
    + setConsultas(consultas: List<Consulta>): void
}

' Inheritance relationships
Persona <|-- Paciente
Persona <|-- Empleado
Empleado <|-- Medico
Empleado <|-- Enfermero
Empleado <|-- Administrativo

' Associations
Paciente ||--o{ HistorialMedico : "has"
Paciente ||--o{ Consulta : "attends"
Medico ||--o{ Consulta : "conducts"
HistorialMedico ||--o{ Consulta : "contains"

' Enum relationships
Paciente --> GrupoSanguineo
Medico --> Especialidad
Empleado --> Cargo
Enfermero --> Area
Enfermero --> Turno

@enduml 